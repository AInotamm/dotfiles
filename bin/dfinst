#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use FindBin qw($Bin);
use Getopt::Long;

my %opts;
GetOptions( \%opts, 'verbose', 'quiet', 'dry-run' );

INFO("Installing dotfiles...");

DEBUG("Running in [$Bin] and installing in [$ENV{HOME}]");

my $backup_dir = $ENV{HOME} . '/.backup';
my $repo_dir   = $Bin;
$repo_dir =~ s/$ENV{HOME}\///;
$repo_dir =~ s/\/bin//;

DEBUG("Backup dir: $backup_dir");
DEBUG("Repo dir: $repo_dir");

chdir( $ENV{HOME} );

# build up skip list
my $skip_files = {};
if ( -e "$repo_dir/skip" ) {
    open( my $skip_fh, '<', "$repo_dir/skip" );
    foreach my $line (<$skip_fh>) {
        chomp($line);
        $skip_files->{$line} = 1;
    }
    close($skip_fh);
    $skip_files->{skip} = 1;

    DEBUG("Skipped file: $_") for keys %$skip_files;
}

if ( !-e $backup_dir ) {
    DEBUG("Creating $backup_dir");
    mkdir($backup_dir) if !$opts{'dry-run'};
}

my $dirh;
opendir $dirh, $repo_dir;
foreach my $direntry ( readdir($dirh) ) {

    # skip current and parent
    next if $direntry eq '.' or $direntry eq '..';

    # skip VCS stuff
    next if $direntry eq '.gitignore' or $direntry eq '.git';

    # skip any other files
    next if $skip_files->{$direntry};

    DEBUG(" Working on $direntry");

    if ( !-l $direntry ) {
        if ( -e $direntry ) {
            INFO("  Backing up $direntry.");
            system("mv $direntry $backup_dir/$direntry") if !$opts{'dry-run'};
        }
        INFO("  Symlinking $direntry.");
        symlink( "$repo_dir/$direntry", $direntry ) if !$opts{'dry-run'};
    }
}

# check if the loader is in
system("grep bashrc.nate .bashrc 2>&1 > /dev/null");
my $rc = $? >> 8;
if ($rc) {
    INFO("Appending loader to .bashrc");
    system('echo -e "\n. $HOME/.bashrc.nate\n" >> .bashrc')
        if !$opts{'dry-run'};
}

# a couple of log4perl-alikes
sub INFO {
    printf "INFO: %s\n", shift if !$opts{quiet};
}

sub DEBUG {
    printf "DEBUG: %s\n", shift if $opts{verbose};
}
